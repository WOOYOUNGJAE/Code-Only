#pragma once

#pragma warning (disable : 4005)
#pragma warning (disable : 4251)

#include <d3d9.h>
#include <d3dx9.h>
#include <string>

#include <vector>
#include <list>
#include <map>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <time.h>
#include <stdlib.h>

#include "Engine_Function.h"
#include "Engine_Macro.h"
#include "Engine_Typedef.h"
#include "Engine_Struct.h"

#include <io.h>
#include "fmod.h"
#include "fmod.hpp"
#pragma comment(lib, "fmodL_vc.lib")


#ifdef _DEBUG

#define _CRTDBG_MAP_ALLOC
#include <stdlib.h>
#include <crtdbg.h>

#ifndef DBG_NEW 

#define DBG_NEW new ( _NORMAL_BLOCK , __FILE__ , __LINE__ ) 
#define new DBG_NEW 

#endif

#endif // _DEBUG

enum KEY_STATE
{
	KEY_NONE,
	KEY_DOWN,
	KEY_PRESSING,
	KEY_UP
};

enum EFFECT_TYPE {
	EFFECT_BLOOD_IMPACTSTRIP,
	EFFECT_POW,
	EFFECT_STRIP,
	EFFECT_SMASHED,
	EFFECT_DAZESWIRL,
	EFFECT_GROSSDEBRIS,
	EFFECT_SMOKEIMPACTUP,
	EFFECT_SMOKING,
	EFFECT_SPARKSTRIP,
	EFFECT_WOODDEBRISSPRITES,
	EFFECT_BLOOD_MIST,
	EFFECT_BULLET_HOLES,
	EFFECT_FIRE_STRIP,
	EFFECT_END
};

enum CHANNELID
{
	SOUND_EFFECT, 
	SOUND_BGM0, SOUND_BGM0_1, SOUND_BGM1, SOUND_BGM1_1, SOUND_BGM2, SOUND_BGM2_1, SOUND_BGM3, SOUND_BGM3_1, SOUND_OVER,
	SOUND_PLAYER_TALK, SOUND_PLAYER_WALK, SOUND_PLAYER_ATTACK, SOUND_PLAYER_SWING, SOUND_PLAYER_HIT,SOUND_PLAYER_HIT_VOICE,SOUND_GUN1, SOUND_GUN2, SOUND_GUN3, SOUND_GUN4,
	SOUND_RADIO, 
	SOUND_ENEMY0, SOUND_ENEMY1, SOUND_ENEMY2, SOUND_ENEMY3, SOUND_ENEMY4, SOUND_ENEMY_HIT, SOUND_ENEMY_BOSS, SOUND_ENEMY_ATTACK,
	SOUND_ITEM, SOUND_NOTI_ERROR,
	SOUND_ENVIRONMENT1, SOUND_ENVIRONMENT2,
	MAXCHANNEL
};

enum EVENT_TYPE
{
	EVENT_UI,
	EVENT_SECTION,
	EVENT_PLAYER_ATTACK,
	EVENT_PLAYER_GUNFIRE,
	EVENT_PLAYER_DIE,
	EVENT_ENEMY_ATTACK,
	EVENT_TOOLTIP_ACTIVE,
	EVENT_RADIO_ACTIVE,
	EVENT_OBJECTIVE_COMPLETE_ACTIVE,
	EVENT_UPDATE_HEALTH,
	EVENT_ENEMY_ARROW,
	EVENT_RENDER,
	EVENT_RENDER_TIMER,
	EVENT_PARTIALLY_HIDDEN,
	EVENT_HIDDEN,
	EVENT_REVEAL,
	EVENT_ENEMY_IN_DISTANCE,
	EVENT_ITEM_BLOCK,	//동준테스트
	EVENT_USED_EQUIPMENT, //동준테스트
	EVENT_ADD_ITEM_IN_INVENTORY, //동준테스트
	EVENT_REMOVE_ITEM_IN_INVENTORY,
	EVENT_INVEN_SELECT,	//인벤셀렉트시 이 이벤트 호출
	EVENT_MAP,
	EVENT_LBUTTON_CLICK,
	EVENT_LBUTTON_PRESSING,
	EVENT_LBUTTON_UP,
	EVENT_UPDATE_LEVEL, 
	EVENT_UPDATE_OBJECTIVE,
	EVENT_SET_OBJECTIVE_COMPLETE,
	EVENT_EXECUTION_TRIGGER,
	EVENT_EXECUTION_SUCCESS,
	EVENT_PLAY_EXECUTION,
	EVENT_SET_WEAPON_UI,
	EVENT_UPDATE_ENEMY_HP,
	EVENT_HANDLE_EFFECT,			
	EVENT_EFFECT_BLOOD_IMPACTSTRIP,	
	EVENT_EFFECT_POW,	
	EVENT_EFFECT_STRIP,	
	EVENT_EFFECT_SMASHED,
	EVENT_EFFECT_DAZESWIRL,
	EVENT_EFFECT_GROSSDEBRIS,
	EVENT_EFFECT_SMOKEIMPACTUP,
	EVENT_EFFECT_SMOKING,
	EVENT_EFFECT_SPARKSTRIP,
	EVENT_EFFECT_WOODDEBRISSPRITES,
	EVENT_EFFECT_BLOOD_MIST,
	EVENT_EFFECT_BULLET_HOLES,
	EVENT_EFFECT_FIRE_STRIP,
	EVENT_UPDATE_BULLET_UI,
	EVENT_SET_PROMPTER,
	EVENT_SET_BUFF,
	EVENT_UPDATE_LOADING,
	EVENT_START_OFF,
	EVENT_UPDATE_STAMINA,
	EVENT_SET_NOTIFICATION,
	EVENT_UPDATE_GUARD,
	EVENT_EAT_HEAL,
	EVENT_UPDATE_INVEN_WEAPON_HP,
	EVENT_SET_INVEN_ITEM,
	EVENT_THROW_TO_ENEMY,
	EVENT_ENEMY_ATTACKED,
	EVENT_SET_TALK,
	EVENT_SET_BGM,
	EVENT_PLAY_BGM,
	EVENT_STOP_BGM,
	EVENT_BUTTON,
	EVENT_TRAIN_COME,
	EVENT_TRAIN_GONE,
	EVENT_SECRET_BUTTON,
	EVENT_PARTICLE,
	EVENT_FLOOR_CHANGE,
	EVENT_BLOODPOOL,
	EVENT_RESPAWN_2F,
	EVENT_DELIA,
	EVENT_CLEAR_PARTICLE,
	EVENT_DEAD,
	EVENT_SET_BGM_MUTE,
	EVENT_SMOKE_ENABLE,
	EVENT_END
};

enum UI
{
	UI_HUDBOX_BACKGROUND,
	UI_HUDBOX_HP_NUM0,
	UI_HUDBOX_HP_NUM1,
	UI_HUDBOX_HP_NUM2,
	UI_HUDBOX_MIKE_HEALTHY,
	UI_HUDBOX_MIKE_SLIGHTLYHURT,
	UI_HUDBOX_MIKE_HURT,
	UI_HUDBOX_MIKE_MODERATELYHURT,
	UI_HUDBOX_MIKE_BADLYHURT,
	UI_HUDBOX_MIKE_PAIN,
	UI_HUDBOX_MIKE_DEAD,
	UI_HUDBOX_MIKE_PARTIALLYHIDDEN,
	UI_HUDBOX_MIKE_HIDDEN,
	UI_HUDBOX_INVEN_0,
	UI_HUDBOX_INVEN_BROKEN0,
	UI_HUDBOX_INVEN_1,
	UI_HUDBOX_INVEN_BROKEN1,
	UI_HUDBOX_INVEN_2,
	UI_HUDBOX_INVEN_BROKEN2,
	UI_HUDBOX_INVEN_SELECT0,	//인벤셀렉 1번시 이거를 값으로 넘겨줄예정
	UI_HUDBOX_INVEN_SELECT1,
	UI_HUDBOX_INVEN_SELECT2,
	UI_HUDBOX_INVEN_HPBAR_BACKGROUND0,
	UI_HUDBOX_INVEN_HPBAR_BACKGROUND1,
	UI_HUDBOX_INVEN_HPBAR_BACKGROUND2,
	UI_HUDBOX_INVEN_HPBAR0,
	UI_HUDBOX_INVEN_HPBAR1,
	UI_HUDBOX_INVEN_HPBAR2,
	UI_STAMINA_BACKGROUND,
	UI_STAMINA_BAR,
	UI_TOOLTIP,
	UI_RADIOBASE,
	UI_CROSSHAIR,
	UI_CROSSHAIR_ATTACK,
	UI_CROSSHAIR_INDISTANCE,
	UI_CROSSHAIR_CHARGING,
	UI_CROSSHAIR_HEAVY_READY,
	UI_ENEMY_ARROW0,
	UI_ENEMY_ARROW1,
	UI_ENEMY_ARROW2,
	UI_ENEMY_ARROW3,
	UI_ENEMY_ARROW4,
	UI_BUFF_1L_1F_STAMINA,
	UI_BUFF_1L_1F_HEAL,
	UI_BUFF_1L_2F_STAMINA,
	UI_BUFF_1L_2F_HEAL,
	UI_BUFF_2L_1F_STAMINA,
	UI_BUFF_2L_1F_HEAL,
	UI_BUFF_2L_2F_STAMINA,
	UI_BUFF_2L_2F_HEAL,
	UI_OBJECTIVE_COMPLETE,
	UI_TEXT,
	UI_PROMPTER, 
	UI_MAP,
	UI_PROGRESS,
	UI_WEAPON_AUTOPISTOL,
	UI_WEAPON_BOTTLE,
	UI_WEAPON_BOTTLE_BACKGROUND,
	UI_WEAPON_BOTTLE_BROKEN,
	UI_WEAPON_BOTTLE_BROKEN_BACKGROUND,
	UI_WEAPON_LEADPIPE,
	UI_WEAPON_LEADPIPE_BACKGROUND,
	UI_WEAPON_LEADPIPE_BROKEN,
	UI_WEAPON_TOMMYGUN,
	UI_PLAYER_STAMINA,
	UI_PLAYER_STAMINA_BACK,
	UI_PLAYER_STAMINA_BACKGROUND,
	UI_ENEMY_HP,
	UI_ENEMY_HP_BACK,
	UI_ENEMY_HP_BACKGROUND_GOON,
	UI_ENEMY_HP_BACKGROUND_MOOK,
	UI_ENEMY_HP_BACKGROUND_MALONE,
	UI_PISTOL_BULLET0,
	UI_PISTOL_BULLET1,
	UI_PISTOL_BULLET2,
	UI_PISTOL_BULLET3,
	UI_PISTOL_BULLET4,
	UI_PISTOL_BULLET5,
	UI_PISTOL_BULLET6,
	UI_PISTOL_BULLET7,
	UI_PISTOL_BULLET8,
	UI_PISTOL_BULLET9,
	UI_PISTOL_BULLET10,
	UI_PISTOL_BULLET11,
	UI_PISTOL_BULLET12,
	UI_PISTOL_BULLET13,
	UI_TOMMYGUN_BULLET0,
	UI_TOMMYGUN_BULLET1,
	UI_TOMMYGUN_BULLET2,
	UI_TOMMYGUN_BULLET3,
	UI_TOMMYGUN_BULLET4,
	UI_TOMMYGUN_BULLET5,
	UI_TOMMYGUN_BULLET6,
	UI_TOMMYGUN_BULLET7,
	UI_TOMMYGUN_BULLET8,
	UI_TOMMYGUN_BULLET9,
	UI_TOMMYGUN_BULLET10,
	UI_TOMMYGUN_BULLET11,
	UI_TOMMYGUN_BULLET12,
	UI_TOMMYGUN_BULLET13,
	UI_TOMMYGUN_BULLET14,
	UI_TOMMYGUN_BULLET15,
	UI_TOMMYGUN_BULLET16,
	UI_TOMMYGUN_BULLET17,
	UI_TOMMYGUN_BULLET18,
	UI_TOMMYGUN_BULLET19,
	UI_TOMMYGUN_BULLET20,
	UI_TOMMYGUN_BULLET21,
	UI_TOMMYGUN_BULLET22,
	UI_TOMMYGUN_BULLET23,
	UI_TOMMYGUN_BULLET24,
	UI_TOMMYGUN_BULLET25,
	UI_TOMMYGUN_BULLET26,
	UI_TOMMYGUN_BULLET27,
	UI_TOMMYGUN_BULLET28,
	UI_TOMMYGUN_BULLET29,
	UI_TOMMYGUN_BULLET30,
	UI_TOMMYGUN_BULLET31,
	UI_TOMMYGUN_BULLET32,
	UI_TOMMYGUN_BULLET33,
	UI_TOMMYGUN_BULLET34,
	UI_TOMMYGUN_BULLET35,
	UI_TOMMYGUN_BULLET36,
	UI_TOMMYGUN_BULLET37,
	UI_TOMMYGUN_BULLET38,
	UI_TOMMYGUN_BULLET39,
	UI_TOMMYGUN_BULLET40,
	UI_TOMMYGUN_BULLET41,
	UI_TOMMYGUN_BULLET42,
	UI_TOMMYGUN_BULLET43,
	UI_TOMMYGUN_BULLET44,
	UI_TOMMYGUN_BULLET45,
	UI_TOMMYGUN_BULLET46,
	UI_TOMMYGUN_BULLET47,
	UI_TOMMYGUN_BULLET48,
	UI_TOMMYGUN_BULLET49,
	UI_LOADING_BACKGROUND,
	UI_LOADING_PROGRESSBAR,
	UI_START_BACKGROUND,
	UI_START_LOGO,
	UI_NOTIFICATION,
	UI_GUARD_BAR,
	UI_GUARD_BACKGROUND,
	UI_HP_UP,
	UI_HP_DOWN,
	UI_DEADONCE,
	UI_DEADLOOP,
	UI_END
};

enum PROMPTER
{
	PROMPTER_APPLE,
	PROMPTER_ASHTRAY_BIN,
	PROMPTER_AUTOMATIC_PISTOL,
	PROMPTER_BANANA,
	PROMPTER_BANANA_PEEL,
	PROMPTER_BAR_STOOL,
	PROMPTER_BOTTLE,
	PROMPTER_BUTTON,
	PROMPTER_CAN,
	PROMPTER_CARDBOARD_BOX,
	PROMPTER_CHAIR,
	PROMPTER_CHOP,
	PROMPTER_COAT_HANGER,
	PROMPTER_COLA,
	PROMTPER_CONTAINER,
	PROMPTER_DELIA,
	PROMPTER_DOOR,
	PROMPTER_DOOR_LOCKED,
	PROMPTER_DOOR_NO_KEY,
	PROMPTER_DOOR_USE,
	PROMPTER_DOWNSTAIRS,
	PROMPTER_DOWNSTAIRS_LOCKED,
	PROMPTER_ESPRESSO_MACHINE,
	PROMPTER_FINISH,
	PROMPTER_FRYINGPAN,
	PROMPTER_GAS_CANISTER,
	PROMPTER_HAIRBRUSH,
	PROMPTER_HANDBAG,
	PROMPTER_INTERACT,
	PROMPTER_JAR,
	PROMPTER_KEY,
	PROMPTER_LEADPIPE,
	PROMPTER_MALONE_DEAD,
	PROMPTER_MALONE_NOTES,
	PROMPTER_MALONE_UNCONSCIOUS,
	PROMPTER_MARTINI_GLASS,
	PROMPTER_MEDKIT,
	PROMPTER_METAL_BARREL,
	PROMPTER_MICROPHONE,
	PROMPTER_MILKJUGS,
	PROMPTER_OIL_BARREL,
	PROMPTER_PADLOCK,
	PROMPTER_PAINT_CAN,
	PROMPTER_PIPE_WIELDING_MOOK_DEAD,
	PROMPTER_PIPE_WIELDING_MOOK_UNCONSCIOUS,
	PROMPTER_POOL_BALL,
	PROMPTER_POT_PLANT,
	PROMPTER_RECEIPT,
	PROMPTER_SCRUNCHED_PAPER,
	PROMPTER_SWITCH,
	PROMPTER_TABLE_LAMP,
	PROMPTER_TABLE_PLANT,
	PROMPTER_TOMMY_GUN,
	PROMPTER_TOOLBOX,
	PROMPTER_TRASH_BIN,
	PROMPTER_TRASH_CAN,
	PROMPTER_TRUTH_SERUM,
	PROMPTER_TUMBLER_GLASS,
	PROMPTER_UMBRELLA_STAND,
	PROMPTER_UNARMED_GOON_DEAD,
	PROMPTER_UNARMED_GOON_UNCONSCIOUS,
	PROMPTER_UPSTAIRS,
	PROMPTER_WOODEN_BARREL,
	PROMPTER_WOODEN_STOOL,
	PROMPTER_FINISH_END,
	PROMPTER_END
};

enum INVEN_SLOT
{
	INVEN_SLOT1 = 1,
	INVEN_SLOT2,
	INVEN_SLOT3,
};

enum OBJECTIVE
{
	OBJ_NIGHTCLUB,
	OBJ_BLACKBOOK,
	OBJ_DELIA
};

enum NOTIFICATION
{
	NOTI_LOCKED,
	NOTI_NEED_BOTH_HAND,
	NOTI_NO_POWER,
	NOTI_NOT_ENOUGH_STAMINA,
	NOTI_PICK_AUTOPISTOL,
	NOTI_PICK_BASEMENT_KEY,
	NOTI_PICK_BOTTLE,
	NOTI_PICK_ENTRANCE_KEY,
	NOTI_PICK_FRYINGPAN,
	NOTI_PICK_LEADPIPE,
	NOTI_PICK_MALONE_KEY,
	NOTI_PICK_TOMMYGUN,
	NOTI_USE_BASEMENT_KEY,
	NOTI_USE_ENTRANCE_KEY,
	NOTI_USE_GATE_KEY,
	NOTI_USE_MALONE_OFFICE_KEY,
	NOTI_USE_MEDKIT,
	NOTI_FEEL_ENERGIZED,
	NOTI_HAND_IS_FULL,
	NOTI_INVENTORY_FULL,
	NOTI_UNLOCK_IT,


};

enum PARTICLE
{
	PARTICLE_GOON,
	PARTICLE_PIPE,
	PARTICLE_BOARD,
	PARTICLE_GLASS,
	PARTICLE_WOODEN,
	PARTICLE_METAL,
	PARTICLE_BLOOD,
	PARTICLE_END
};

#define			VK_MAX		0xff



using namespace std;
using namespace Engine;